@function sy-generate-color($name, $hue, $modifier: $sy-color-modifier) {
  $colors: ();
  @each $step, $m in $modifier {
    $h: $hue;
    $s: 0;
    $l: 0;
    @if map-has-key($m, 's') {
      $s: map-get($m, 's');
    }
    @if map-has-key($m, 'l') {
      $l: map-get($m, 'l');
    }
    @if $hue == null {
      $h: 0;
      $s: 0;
    }
    $colors: map-merge($colors, (#{$name}-#{$step}: hsl($h, $s, $l)));
  }
  @return $colors;
}

@function sy-generate-color-palette($hues, $modifier: $sy-color-modifier) {
  $colors: ();
  @each $name, $hue in $hues {
    $colors: map-merge($colors, sy-generate-color($name, $hue, $modifier));
  }
  @return $colors;
}

@function sy-color($name) {
  @if map-has-key($sy-color-all, $name) {
    @return map-get($sy-color-all, $name);
  }
  @return #000;
}
////
/// @author [Syndesi](https://syndesi.de/)
////


@mixin sy-make-col($size, $columns: $sy-grid-columns) {
  flex: 0 0 percentage($size / $columns);
  max-width: percentage($size / $columns);
}

@mixin sy-make-col-offset($size, $columns: $sy-grid-columns) {
  $num: $size / $columns;
  margin-left: if($num == 0, 0, percentage($num));
}

@mixin sy-make-grid-columns($columns: $sy-grid-columns, $gap: $sy-grid-default-gap) {
  %column {
    position: relative;
    width: 100%;
    min-height: 1px; // Prevent columns from collapsing when empty
    padding-right: $gap * 0.5;
    padding-left: $gap * 0.5;
  }

  @each $breakpoint in map-keys($sy-breakpoint) {
    $infix: sy-breakpoint-infix($breakpoint);
    @for $i from 1 through $columns {
      .sy-col#{$infix}-#{$i} {
        @extend %column;
      }
    }
    .sy-col#{$infix},
    .sy-col#{$infix}-auto {
      @extend %column;
    }
    @include sy-media-breakpoint-up($breakpoint) {
      .sy-col#{$infix} {
        flex-basis: 0;
        flex-grow: 1;
        max-width: 100%;
      }
      .sy-col#{$infix}-auto {
        flex: 0 0 auto;
        width: auto;
        max-width: none;
      }
      @for $i from 1 through $columns {
        .sy-col#{$infix}-#{$i} {
          @include sy-make-col($i, $columns);
        }
      }
      .sy-order#{$infix}-first { order: -1; }
      .sy-order#{$infix}-last { order: $columns + 1; }
      @for $i from 0 through $columns {
        .sy-order#{$infix}-#{$i} { order: $i; }
      }
      @for $i from 0 through ($columns - 1) {
        @if not ($infix == "" and $i == 0) {
          .sy-offset#{$infix}-#{$i} {
            @include sy-make-col-offset($i, $columns);
          }
        }
      }
    }
  }
}

